apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'osgi'
apply plugin: 'maven'

version = '1.0.0'

sourceCompatibility = 1.5
targetCompatibility = 1.5

def nativeInterface = "com.libnodave.Interface"

String javaHome = System.getProperty("java.home");
String javaInclude = "(none)";

println javaHome;

if (javaHome.contains("openjdk")) {
  println "OPENJDK detected!"
  javaInclude = javaHome.replace("jre", "include");
}


javaInclude = "-I" + javaInclude;

println javaInclude;

repositories { mavenCentral() }

jar {
  manifest {
    version = project.version
    instruction 'Bundle-NativeCode', 'lib/x86/libnodave-native.dll;osname=WindowsXP;osname=WindowsVista;osname=Windows7;processor=x86,lib/x86/liblibnodave-native.so;osname=Linux;processor=x86,lib/arm/liblibnodave-native.so;osname=Linux;processor=arm'
	// instruction 'Bundle-NativeCode', 'lib/x86/liblibnodave-native.so'
  }
}

dependencies {
  testCompile group: 'junit', name: 'junit', version: '4.10'
}

eclipse.pathVariables([GRADLE_USER_HOME:file(gradle.gradleUserHomeDir)])
tasks.eclipse.dependsOn(cleanEclipse)

task compileWrapper(type:Exec) {
 // dependsOn(javah)

  args '-c', 'native/wrapper/src/main/cpp/libnodave-jni.c', javaInclude, '-Inative/libnodave/', '-Ibuild/classes/main'

  executable 'i586-mingw32msvc-gcc'
}

task javah(type:Exec) {
  workingDir 'build/classes/main'
  args '-jni', 'com.libnodave.Interface'
  executable 'javah'
}

